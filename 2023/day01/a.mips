.globl main

.data

outcome:  .asciiz "part a: "
filename: .asciiz "/home/erik/advent-of-code/2023/day01/input.txt"

buffer:   .space  21785 # Hardcoded number of bytes in input file

.text

main:
    la $s1, buffer
    li $t9, 0  # sum
    li $t5, 10 # newline

    # open file
    li $v0, 13
    la $a0, filename
    li $a1, 0
    li $a2, 0
    syscall

    move $s0, $v0  # store the file descriptor

    # read file into buffer
    li   $v0, 14
    move $a0, $s0
    move $a1, $s1
    li   $a2, 21785
    syscall

read_line:
    li $t6, -1 # first digit
    li $t7, -1 # last digit

read_byte:
    lb   $t0, ($s1)
    beqz $t0, done

    addi $s1, $s1, 1

    beq  $t0, $t5, process_line
    blt  $t0, '0', read_byte
    bgt  $t0, '9', read_byte

    sub  $t0, $t0, '0'
    bltz $t6, first_digit
    j    last_digit

first_digit:
    move $t6, $t0
    move $t7, $t0
    j    read_byte

last_digit:
    move $t7, $t0
    j    read_byte

process_line:
    mul  $t6, $t6, 10
    add  $t6, $t6, $t7
    add  $t9, $t9, $t6
    j read_line

done:
    # close file
    li   $v0, 16
    move $a0, $s0
    syscall

    # print outcome message
    li $v0, 4
    la $a0, outcome
    syscall

    # print outcome
    li   $v0, 1
    move $a0, $t9
    syscall

    li $v0, 10
    syscall
